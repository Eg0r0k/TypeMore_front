@use 'sass:meta';
@use 'sass:color';
@use 'sass:map';
@mixin em-to-rem($property, $value) {
  #{$property}: $value * 1rem;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
@mixin hide-visually {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  clip: rect(0, 0, 0, 0);
  overflow: hidden;
}

@mixin disable-selection {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

@mixin hex-to-rgba($color, $alpha: 1) {
  color: rgba(color.red($color), color.green($color), color.blue($color), $alpha);
}

@mixin flexible-width($min: 300px, $max: 1000px) {
  width: 100%;
  max-width: $max;
  min-width: $min;
}

@mixin invisible {
  visibility: hidden;
}

@mixin text-overflow($no-wrap: true) {
  @if meta.type-of($no-wrap) == number {
    display: -webkit-box;
    -webkit-line-clamp: $no-wrap;
    -webkit-box-orient: vertical;
    word-break: break-word;
  } @else if $no-wrap != false {
    white-space: nowrap;
  } @else {
    word-break: break-word;
  }

  text-overflow: ellipsis;
  overflow: hidden;
}

@mixin button-style($styles) {
  @each $key, $val in $styles {
    .button--color-#{$key} {
      background-color: map.get($val, 'background');

      p,
      .icon {
        color: map.get($val, 'color');
      }

      @media (hover: hover), (pointer: fine) {
        &:hover {
          background-color: map.get($val, 'hover');

          p,
          .icon {
            color: map.get($val, 'hover-color');
          }
        }
      }

      &:active {
        background-color: map.get($val, 'active');

        p,
        .icon {
          color: map.get($val, 'active-color');
        }
      }
    }

    .button--color-#{$key}-outline {
      background-color: transparent;
      box-shadow: 0 0 0 1px map.get($val, 'background');

      p,
      .icon {
        color: map.get($val, 'background');
      }

      @media (hover: hover), (pointer: fine) {
        &:hover {
          background-color: map.get($val, 'background');
          box-shadow: 0 0 0 1px map.get($val, 'hover');

          p,
          .icon {
            color: map.get($val, 'hover-color');
          }
        }
      }

      &:active {
        background-color: map.get($val, 'active');
        box-shadow: 0 0 0 1px map.get($val, 'active');

        p,
        .icon {
          color: map.get($val, 'active-color');
        }
      }
    }
  }
}

@mixin font-face($font-name, $font-path) {
  @font-face {
    font-family: '#{$font-name}';
    src: url('#{$font-path}.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
  }
}
